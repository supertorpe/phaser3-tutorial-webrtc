var e=Object.defineProperty,t=(t,s,i)=>(((t,s,i)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i})(t,"symbol"!=typeof s?s+"":s,i),i);export function __vite_legacy_guard(){import("data:text/javascript,")}import{P as s,g as i,V as o,L as r,M as a,s as n,a as l}from"./vendor.4c864b2d.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class c{clone(e){const t={fps:e.fps,fixedStep:e.fixedStep,timeScale:e.timeScale,gravity:e.gravity.clone(),x:e.bounds.x,y:e.bounds.y,width:e.bounds.width,height:e.bounds.height,checkCollision:{up:e.checkCollision.up,down:e.checkCollision.down,left:e.checkCollision.left,right:e.checkCollision.right},overlapBias:e.OVERLAP_BIAS,tileBias:e.TILE_BIAS,forceX:e.forceX,isPaused:e.isPaused,debug:e.drawDebug,debugShowBody:e.defaults.debugShowBody,debugShowStaticBody:e.defaults.debugShowStaticBody,debugShowVelocity:e.defaults.debugShowVelocity,debugBodyColor:e.defaults.staticBodyDebugColor,debugVelocityColor:e.defaults.velocityDebugColor,maxEntries:e.maxEntries,useTree:e.useTree};let s=new Phaser.Physics.Arcade.World(e.scene,t);return e.bodies.iterate((e=>{s.bodies.set(this.cloneBody(s,e))})),e.staticBodies.iterate((e=>{s.staticBodies.set(this.cloneStaticBody(s,e))})),e.pendingDestroy.iterate((e=>{s.pendingDestroy.set(this.cloneStaticOrDynamicBody(s,e))})),s.treeMinMax={minX:e.treeMinMax.minX,minY:e.treeMinMax.minY,maxX:e.treeMinMax.maxX,maxY:e.treeMinMax.maxY},s}cloneBody(e,t){const s=new Phaser.Physics.Arcade.Body(e,t.gameObject);return s.acceleration=t.acceleration.clone(),s.allowDrag=t.allowDrag,s.allowGravity=t.allowGravity,s.allowRotation=t.allowRotation,s.angle=t.angle,s.angularAcceleration=t.angularAcceleration,s.angularDrag=t.angularDrag,s.angularVelocity=t.angularVelocity,s.blocked={none:t.blocked.none,up:t.blocked.up,down:t.blocked.down,left:t.blocked.left,right:t.blocked.right},s.bounce=t.bounce.clone(),s.center=t.center.clone(),s.checkCollision={none:t.checkCollision.none,up:t.checkCollision.up,down:t.checkCollision.down,left:t.checkCollision.left,right:t.checkCollision.right},s.collideWorldBounds=t.collideWorldBounds,s.customBoundsRectangle=new Phaser.Geom.Rectangle(t.customBoundsRectangle.x,t.customBoundsRectangle.y,t.customBoundsRectangle.width,t.customBoundsRectangle.height),s.customSeparateX=t.customSeparateX,s.customSeparateY=t.customSeparateY,s.debugBodyColor=t.debugBodyColor,s.debugShowBody=t.debugShowBody,s.debugShowVelocity=t.debugShowVelocity,s.deltaMax=t.deltaMax.clone(),s.drag=t.drag.clone(),s.embedded=t.embedded,s.enable=t.enable,s.facing=t.facing,s.friction=t.friction.clone(),s.gravity=t.gravity.clone(),s.halfHeight=t.halfHeight,s.halfWidth=t.halfWidth,s.immovable=t.immovable,s.isCircle=t.isCircle,s.mass=t.mass,s.maxAngular=t.maxAngular,s.maxSpeed=t.maxSpeed,s.maxVelocity=t.maxVelocity.clone(),s.moves=t.moves,s.offset=t.offset.clone(),s.onCollide=t.onCollide,s.onOverlap=t.onOverlap,s.onWorldBounds=t.onWorldBounds,s.overlapR=t.overlapR,s.overlapX=t.overlapX,s.overlapY=t.overlapY,s.position=t.position.clone(),s.preRotation=t.preRotation,s.prev=t.prev.clone(),s.prevFrame=t.prevFrame.clone(),s.pushable=t.pushable,s.radius=t.radius,s.rotation=t.rotation,s.sourceHeight=t.sourceHeight,s.sourceWidth=t.sourceWidth,s.speed=t.speed,s.syncBounds=t.syncBounds,s.touching={none:t.touching.none,up:t.touching.up,down:t.touching.down,left:t.touching.left,right:t.touching.right},s.useDamping=t.useDamping,s.velocity=t.velocity.clone(),s.wasTouching={none:t.wasTouching.none,up:t.wasTouching.up,down:t.wasTouching.down,left:t.wasTouching.left,right:t.wasTouching.right},null!==t.worldBounce&&(s.worldBounce=t.worldBounce.clone()),s.x=t.x,s.y=t.y,s}cloneStaticBody(e,t){const s=new Phaser.Physics.Arcade.StaticBody(e,t.gameObject);return s.blocked={none:t.blocked.none,up:t.blocked.up,down:t.blocked.down,left:t.blocked.left,right:t.blocked.right},s.center=t.center.clone(),s.checkCollision={none:t.checkCollision.none,up:t.checkCollision.up,down:t.checkCollision.down,left:t.checkCollision.left,right:t.checkCollision.right},s.customSeparateX=t.customSeparateX,s.customSeparateY=t.customSeparateY,s.debugBodyColor=t.debugBodyColor,s.debugShowBody=t.debugShowBody,s.embedded=t.embedded,s.enable=t.enable,s.halfHeight=t.halfHeight,s.halfWidth=t.halfWidth,s.height=t.height,s.immovable=t.immovable,s.isCircle=t.isCircle,s.mass=t.mass,s.onCollide=t.onCollide,s.onOverlap=t.onOverlap,s.overlapR=t.overlapR,s.overlapX=t.overlapX,s.overlapY=t.overlapY,s.physicsType=t.physicsType,s.position=t.position.clone(),s.pushable=t.pushable,s.radius=t.radius,s.touching={none:t.touching.none,up:t.touching.up,down:t.touching.down,left:t.touching.left,right:t.touching.right},s.wasTouching={none:t.wasTouching.none,up:t.wasTouching.up,down:t.wasTouching.down,left:t.wasTouching.left,right:t.wasTouching.right},s.width=t.width,s.x=t.x,s.y=t.y,s}cloneStaticOrDynamicBody(e,t){return t instanceof Phaser.Physics.Arcade.Body?this.cloneBody(e,t):this.cloneStaticBody(e,t)}cloneColliderObject(e){let t;return t=e instanceof Phaser.GameObjects.Group?new Phaser.GameObjects.Group(e.scene,e.children.getArray()):e,t}}class d{constructor(...e){t(this,"_slice"),t(this,"_time"),t(this,"_world"),t(this,"_commands"),t(this,"_randomPointer"),t(this,"_info"),2==e.length?(this._world=e[0],this._info=e[1]):6==e.length&&(this._slice=e[0],this._time=e[1],this._world=e[2],this._commands=e[3],this._randomPointer=e[4],this._info=e[5])}get slice(){return this._slice}set slice(e){this._slice=e}get time(){return this._time}set time(e){this._time=e}get world(){return this._world}set world(e){this._world=e}get commands(){return this._commands}set commands(e){this._commands=e}get randomPointer(){return this._randomPointer}set randomPointer(e){this._randomPointer=e}get info(){return this._info}set info(e){this._info=e}}class h extends s.Scene{constructor(e,i,o,r,a){super(e),t(this,"randomGenerator"),t(this,"worldCloner",new c),t(this,"peers"),t(this,"mesh"),t(this,"_uuid"),t(this,"_myIndex"),t(this,"peersDisconnected",[]),t(this,"gameHistory"),t(this,"latestGameState"),t(this,"renderGameStateIdx"),t(this,"commandBuffer"),t(this,"userCommand"),t(this,"randomValues"),t(this,"running",!1),t(this,"timeToStart"),t(this,"messagesReceived"),t(this,"messagesSent"),this.randomGenerator=new s.Math.RandomDataGenerator(["1234567890"]),this._uuid=i,this._myIndex=o.findIndex((e=>e.uuid==i)),this.peers=o,this.mesh=r,r.messageEmitter.addEventListener(((e,t)=>{this.messageReceived(e,t)})),r.connectionReadyEmitter.addEventListener(((e,t)=>{if(!t){const t=o.find((t=>t.uuid===e));t&&this.peersDisconnected.push(t.uuid)}})),this.gameHistory=[],this.commandBuffer=[],this.randomValues=[],this.running=!1,this.timeToStart=a,this.messagesReceived=0,this.messagesSent=0}get myUUID(){return this._uuid}get myIndex(){return this._myIndex}create(){this.physics.world.pause();const e=this.sceneCreate();e.slice=0,e.time=this.timeToStart,e.randomPointer=-1,e.commands=new Array(this.peers.length),this.gameHistory.push(e),this.latestGameState=e,this.renderGameStateIdx=0}doStep(e){const t=this.timeToStart+100*(1+this.latestGameState.slice);if(e>=t){const i=e>=t+100;if(i){const i=Math.ceil((e-t)/100);console.log(`There are ${i} gaps in game history. Latest known gamestate: ${this.latestGameState.slice}`);for(let e=1;e<i;e++)this.gameHistory.push(new d(this.latestGameState.slice+e,this.latestGameState.time+100*e,new s.Physics.Arcade.World(this,{}),new Array(this.peers.length),this.latestGameState.randomPointer,this.cloneGameStateInfo(this.latestGameState.info)))}let o=this.loadCommandsIntoGameStates();for(i&&(null==o||this.latestGameState.slice<o.slice)&&(o=this.latestGameState),o&&this.rewriteHistory(o),this.latestGameState=this.nextGameState(!0,this.gameHistory[this.gameHistory.length-1]),this.gameHistory.push(this.latestGameState);this.gameHistory.length>1e3;)this.gameHistory.shift();this.gameHistory.length>3&&(this.renderGameStateIdx=this.gameHistory.length-3)}}update(){const e=i();if(!this.running&&e>=this.timeToStart&&(this.running=!0,this.readyToStart()),!this.running)return;let t=this.readCommand();this.userCommand||(this.userCommand=new Uint16Array(4)),this.userCommand[2]&&this.userCommand[2]===t||(this.userCommand[0]=0,this.userCommand[1]=this.myIndex,this.userCommand[2]=t,this.userCommand[3]=this.latestGameState.slice,this.mesh.broadcast(this.userCommand.buffer)),this.doStep(e),this.renderObjects(this.renderGameStateIdx)}renderObjects(e){const t=i()-200,s=this.gameHistory[e],o=this.gameHistory.length>e+1;let r,a=s.world.bodies.getArray();for(let[i,n]of a.entries()){if(!n.enable)continue;const a=n.gameObject;if(a){const l=a;if(o&&a.getData("interpolate")){let o=this.gameHistory[e+1];r||(r=o.world.bodies.getArray());let a=r[i];this.interpolate(l,t,s.time,n.position,n.velocity,o.time,a.position,a.velocity)}else{let e=n.position;l.x=e.x+l.displayOriginX,l.y=e.y+l.displayOriginY}}}this.render(s)}nextGameState(e,t,i){let o;i?(o=i,o.world=this.cloneWorld(t.world),o.randomPointer=t.randomPointer,o.info=this.cloneGameStateInfo(t.info)):o=new d(t.slice+1,t.time+100,this.cloneWorld(t.world),new Array(this.peers.length),t.randomPointer,this.cloneGameStateInfo(t.info)),e&&(o.commands[this.myIndex]=this.userCommand),this.physics.world=o.world,this.physics.add.world=o.world,this.sys.updateList.getActive().forEach((e=>{e instanceof s.Physics.Arcade.Group?e.world=o.world:e instanceof s.GameObjects.GameObject&&(e.body.world=o.world)}));const r=o.world.bodies.getArray();r.forEach((e=>{e.gameObject.body=e})),this.newGameState(t,o,null!=i);for(let s of t.commands){if(void 0===s)continue;const e=r.find((e=>e.gameObject.getData("peerIndex")==s[1]));e&&this.applyCommandToBody(e,s[2],t.info)}return o.world.step(.1),o}isDisconnected(e){return void 0!==this.peersDisconnected.find((t=>t===e))}rewriteHistory(e){console.group(`rewriteHistory from gameState ${e.slice}`);let t=this.gameHistory.findIndex((t=>t.slice===e.slice)),s=e.slice;for(;t>=0&&t<this.gameHistory.length-1;)console.log("rewriting gameState "+ ++s),this.nextGameState(!1,this.gameHistory[t],this.gameHistory[t+1]),t++;console.groupEnd()}messageReceived(e,t){const s=new Uint16Array(t.body);if(0===s[0])this.commandBuffer.push({slice:s[3],command:s})}loadCommandsIntoGameStates(){let e;const t=this.gameHistory.length,s=this.gameHistory[0].slice,i=this.commandBuffer.length;let o=0;for(let r=0;r<i;r++){let i=this.commandBuffer[r-o];if(i.slice>=s&&i.slice<s+t){const a=this.gameHistory[i.slice-s];a.commands[i.command[1]]&&a.commands[i.command[1]][2]==i.command[2]||(i.slice<s+t-1&&(!e||e>i.slice)&&(e=i.slice),a.commands[i.command[1]]=i.command),this.commandBuffer.splice(r-o++,1)}}return e?this.gameHistory[e-s]:null}findBodyByPhaserName(e,t){var s;return null==(s=e.world)?void 0:s.bodies.getArray().find((e=>e.gameObject&&e.gameObject.name===t))}interpolate(e,t,s,i,o,r,a,n){const l=t-s,c=t-r;Math.sign(o.x)===Math.sign(n.x)?e.x=e.displayOriginX+(i.x+l*(a.x-i.x)/100):e.x=l<-c?e.displayOriginX+(i.x+o.x*l/1e3):e.displayOriginX+(a.x+n.x*c/1e3),Math.sign(o.y)===Math.sign(n.y)?e.y=e.displayOriginY+(i.y+l*(a.y-i.y)/100):e.y=l<-c?e.displayOriginY+(i.y+o.y*l/1e3):e.displayOriginY+(a.y+n.y*c/1e3)}nextRandom(e,t,s){e++;for(let i=this.randomValues.length;i<=e;i++){let e=t+this.randomGenerator.between(t,s);this.randomValues.push(e)}return this.randomValues[e]}cloneWorld(e){return this.worldCloner.clone(e)}debugGameState(e){let t=`gameState ${e.slice}\n  bodies\n`;e.world&&e.world.bodies.iterate((e=>{e.gameObject&&(t+=`    ${e.gameObject.name} x=${e.x},y=${e.y}\n`)})),t+="  commands:",e.commands.forEach((e=>{e&&(t+=`${e[1]}:${e[2]} `)})),t+=`\n  randomPointer: ${e.randomPointer}\n`,t+=`  info: ${JSON.stringify(e.info)}\n`,console.log(t)}}class m extends h{constructor(e,s,i,o){super("mainScene",e,s,i,o),t(this,"waitingText"),t(this,"scoreTexts"),t(this,"platforms"),t(this,"players"),t(this,"stars"),t(this,"bombs"),t(this,"arrow"),t(this,"joyStick"),t(this,"joystickKeys"),t(this,"STRENGTH_X",100),t(this,"STRENGTH_Y",500)}preload(){this.load.image("sky","assets/sky.png"),this.load.image("ground","assets/platform.png"),this.load.image("star","assets/star.png"),this.load.image("bomb","assets/bomb.png"),this.load.spritesheet("dude","assets/dude.png",{frameWidth:32,frameHeight:42}),this.load.spritesheet("dude2","assets/dude2.png",{frameWidth:32,frameHeight:42})}sceneCreate(){this.add.image(0,0,"sky").setOrigin(0,0),this.scoreTexts=[];const e={font:"20px Arial",fill:"#fff"};for(let[i,o]of this.peers.entries())this.scoreTexts[i]=this.add.text(20,20+30*i,`${o.username}: 0`,e);this.waitingText=this.add.text(300,300,"waiting for sync ...",e),this.platforms=this.physics.add.staticGroup(),this.platforms.create(400,568,"ground").setScale(2).refreshBody(),this.platforms.create(600,400,"ground"),this.platforms.create(50,250,"ground"),this.platforms.create(750,220,"ground"),this.anims.create({key:"left",frames:this.anims.generateFrameNumbers("dude",{start:0,end:3}),frameRate:10,repeat:-1}),this.anims.create({key:"turn",frames:[{key:"dude",frame:4}],frameRate:20}),this.anims.create({key:"right",frames:this.anims.generateFrameNumbers("dude",{start:5,end:8}),frameRate:10,repeat:-1}),this.anims.create({key:"left2",frames:this.anims.generateFrameNumbers("dude2",{start:0,end:3}),frameRate:10,repeat:-1}),this.anims.create({key:"turn2",frames:[{key:"dude2",frame:4}],frameRate:20}),this.anims.create({key:"right2",frames:this.anims.generateFrameNumbers("dude2",{start:5,end:8}),frameRate:10,repeat:-1}),this.players=this.physics.add.group({collideWorldBounds:!0,bounceX:.2,bounceY:.2,frictionX:0,frictionY:0,maxVelocityX:200,maxVelocityY:200,mass:.5});const t=[];for(let[i,o]of this.peers.entries()){t[i]=0;let e=this.players.create(100+40*i,450,o.uuid===this.myUUID?"dude":"dude2");e.setName(o.uuid),e.setData("uuid",o.uuid),e.setData("interpolate",!0),e.setData("peerIndex",i),e.setBounce(.2,.2),e.anims.play(o.uuid===this.myUUID?"turn":"turn2")}const s=new d(this.physics.world,{scores:t,bombCount:0});this.stars=this.physics.add.group({collideWorldBounds:!0,bounceX:.2,bounceY:.2,frictionX:0,frictionY:0,maxVelocityX:200,maxVelocityY:200,mass:.5});for(let i=0;i<12;i++){const e=this.stars.create(12+70*i,0,"star");e.setName(`star${i+1}`),e.setMaxVelocity(0,200),e.setData("interpolate",!0)}return this.stars.children.iterate(((e,t)=>{const i=e;i.setBounceY(this.nextRandom(s.randomPointer++,4,8)/10),i.setData("index",t)})),this.bombs=this.physics.add.group({collideWorldBounds:!0,allowGravity:!1,bounceX:1,bounceY:1}),this.arrow=this.input.keyboard.createCursorKeys(),this.joyStick=new o(this,{x:700,y:500,radius:50,base:this.add.circle(0,0,100,8947848,.5),thumb:this.add.circle(0,0,50,13421772,.5)}),this.joystickKeys=this.joyStick.createCursorKeys(),s}readyToStart(){this.waitingText.visible=!1}newGameState(e,t,s){this.physics.add.collider(this.players,this.players),this.physics.add.collider(this.players,this.platforms),this.physics.add.collider(this.stars,this.platforms),this.physics.add.collider(this.bombs,this.platforms),this.physics.add.overlap(this.players,this.stars,((e,s)=>{e.getData("playerCollectingStar")||(e.setData("playerCollectingStar",s),this.collectStar(t,e,s))})),this.physics.add.overlap(this.players,this.bombs,((e,s)=>{e.getData("playerBeingHit")||(e.setData("playerBeingHit",s),this.hitBomb(t,e))})),this.players.children.entries.forEach((e=>{e.getData("playerBeingHit")&&!this.physics.overlap(e,e.getData("playerBeingHit"))&&(e.setData("playerBeingHit",!1),e.clearTint()),e.getData("playerCollectingStar")&&!this.physics.overlap(e,e.getData("playerCollectingStar"))&&e.setData("playerCollectingStar",!1)}))}applyCommandToBody(e,t,s){e.setAcceleration(10==t||12==t?this.STRENGTH_X:20==t||22==t?-this.STRENGTH_X:0,!e.touching.down||2!=t&&12!=t&&22!=t?0:-this.STRENGTH_Y);const i=e.gameObject,o=i.getData("peerIndex")===this.myIndex;20==t||22==t?i.anims.play(o?"left":"left2",!0):10==t||12==t?i.anims.play(o?"right":"right2",!0):i.anims.play(o?"turn":"turn2")}readCommand(){let e=this.arrow.right.isDown||this.joystickKeys.right&&this.joystickKeys.right.isDown,t=this.arrow.left.isDown||this.joystickKeys.left&&this.joystickKeys.left.isDown;return(e?10:t?20:0)+(this.arrow.up.isDown||this.joystickKeys.up&&this.joystickKeys.up.isDown?2:0)}render(e){for(let[t,s]of this.peers.entries())this.scoreTexts[t].setText(`${s.username}: ${e.info.scores[t]} ${this.isDisconnected(s.uuid)?" (disconnected)":""}`)}cloneGameStateInfo(e){return{scores:[...e.scores],bombCount:e.bombCount}}collectStar(e,t,s){const i=t.getData("peerIndex");if(e.info.scores[i]+=10,s.disableBody(!0,!0),0===this.stars.countActive(!0)){this.stars.children.iterate((e=>{const t=e;t.enableBody(!0,t.x,0,!0,!0)})),e.info.bombCount++;const t=`bomb${e.info.bombCount}`;let s=this.bombs.children.getArray().find((e=>{e.name}));s?(s.x=400,s.y=16):(s=this.bombs.create(400,16,"bomb"),s.setName(t),s.setData("interpolate",!0)),s.setVelocity(this.nextRandom(e.randomPointer++,50,100),100)}}hitBomb(e,t){var s;const i=t.getData("peerIndex");e.info.scores[i]-=10;(null==(s=e.world.bodies.getArray().find((e=>i==e.gameObject.getData("peerIndex"))))?void 0:s.gameObject).setTint(16711680)}}const u=new r;new class{constructor(){t(this,"LETTERS","ABCDEFGHIJKLMNOPQRSTUVWXYZ"),t(this,"myUUID"),this.myUUID=this.generateRandomLetters(10),console.log(this.myUUID),n(!1);const e=document.querySelector(".container"),s=document.querySelector("#btnHostGame"),i=document.querySelector("#btnJoinGame"),o=document.querySelector(".firstStep"),r=document.querySelector(".hostGame"),c=document.querySelector(".joinGame"),d=document.querySelector("#inputHostUsername"),h=document.querySelector("#btnHost"),y=document.querySelector("#inputRoomCode"),g=document.querySelector("#inputJoinUsername"),p=document.querySelector("#btnJoin"),f=document.querySelector("#roomCodeLabel"),b=document.querySelector("#numPlayersLabel"),w=document.querySelector("#numPlayersReadyLabel"),S=document.querySelector("#btnReady"),x=document.querySelector(".waiting");s.addEventListener("click",(()=>{o.style.display="none",r.style.display="flex"})),i.addEventListener("click",(()=>{o.style.display="none",c.style.display="flex"})),h.addEventListener("click",(()=>{if(d.style.borderColor="black",!d.value)return void(d.style.borderColor="red");h.disabled=!0;const e=this.generateRandomLetters(4),t=d.value;u.hostRoom(e,t,this.myUUID)})),p.addEventListener("click",(()=>{y.style.borderColor="black",g.style.borderColor="black";let e=!1;if(y.value||(y.style.borderColor="red",e=!0),g.value||(g.style.borderColor="red",e=!0),e)return;p.disabled=!0;const t=y.value.toUpperCase(),s=g.value;u.joinRoom(t,s,this.myUUID).then((e=>{e||(alert("Room does not exists"),p.disabled=!1)}))})),S.addEventListener("click",(()=>{u.upatePlayerStatus(!0),S.style.display="none"}));const v=new l({iceServers:[{urls:"stun:supertorpe.ignorelist.com:16310"},{urls:"turn:supertorpe.ignorelist.com:16310",username:"usuario",credential:"clave"}]},{ordered:!1},1e3,1e4,5e3,2e3),C=new a(v,this.myUUID);let B;u.roomRecordEmitter.addEventListener(((t,s)=>{console.log("room info changed: "+JSON.stringify(s)),r.style.display="none",c.style.display="none",x.style.display="flex",f.innerHTML=s.roomId,b.innerHTML=s.peers.length.toString(),w.innerHTML=s.peers.reduce(((e,t)=>t.ready?++e:e),0).toString(),s.peers.length>1&&s.peers.every((e=>e.ready))&&u.startPairings(C).then((t=>{t?(B=s.peers,s.peers[0].uuid===this.myUUID&&setTimeout((()=>{const t=new Uint8Array(2);t[0]=33,t[1]=2;let i=0;C.broadcastAndListen(t.buffer).forEach((t=>t.then((t=>{i++,i===s.peers.length-1&&(e.style.display="none",T(s.peers,C,t.sourceTimestamp?t.sourceTimestamp+2e3:0))}))))}),2e3)):alert("Error while paring players")}))})),C.messageEmitter.addEventListener(((t,s)=>{const i=new Int8Array(s.body);if(33===i[0]){const o=new Uint8Array(1);o[0]=34,C.reply(t,s,o);const r=i[1];e.style.display="none",T(B,C,s.timestampToLocalTime?s.timestampToLocalTime+1e3*r:0)}}));const T=(e,t,s)=>{console.log(`timeToStart=${s}`),new Phaser.Game({parent:"game-container",type:Phaser.AUTO,width:800,height:600,pixelArt:!0,scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{y:300},debug:!1}},scene:new m(this.myUUID,e,t,s)})}}generateRandomLetters(e){let t="";for(let s=0;s<e;s++){const e=Math.floor(Math.random()*this.LETTERS.length);t+=this.LETTERS[e]}return t}};
